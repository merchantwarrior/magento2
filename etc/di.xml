<?xml version="1.0"?>
<config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:framework:ObjectManager/etc/config.xsd">
    <!-- Payment Method Facade configuration -->
    <virtualType name="MerchantWarriorPaymentPayFrameFacade" type="Adyen\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">MerchantWarrior\Payment\Model\Ui\PayFrameConfigProvider::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Magento\Payment\Block\Info</argument>
            <argument name="valueHandlerPool" xsi:type="object">MerchantWarriorPaymentPayFrameValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">MerchantWarriorPaymentPayFrameCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- Value handlers infrastructure -->
    <virtualType name="MerchantWarriorPaymentPayFrameValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MerchantWarriorPaymentPayFrameConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Configuration reader -->
    <virtualType name="MerchantWarriorPaymentPayFrameConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MerchantWarriorPaymentPayFrameConfig</argument>
        </arguments>
    </virtualType>
    <virtualType name="MerchantWarriorPaymentPayFrameConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">MerchantWarrior\Payment\Model\Ui\PayFrameConfigProvider::CODE</argument>
        </arguments>
    </virtualType>

    <!-- Commands infrastructure -->
    <virtualType name="MerchantWarriorPaymentPayFrameCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="authorize" xsi:type="string">MerchantWarriorPaymentPayFrameAuthorizeCommand</item>
                <item name="capture" xsi:type="string">MerchantWarriorPaymentCaptureCommand</item>
                <item name="void" xsi:type="string">MerchantWarriorPaymentCancelCommand</item>
                <item name="refund" xsi:type="string">MerchantWarriorPaymentRefundCommand</item>
                <item name="cancel" xsi:type="string">MerchantWarriorPaymentCancelCommand</item>
                <item name="vault_authorize" xsi:type="string">MerchantWarriorPaymentPayFrameVaultAuthorizeCommand</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Checkout Response validator -->
    <virtualType name="CheckoutResponseValidator" type="Adyen\Payment\Gateway\Validator\CheckoutResponseValidator">
        <arguments>
            <argument name="loggerInterface" xsi:type="object">MerchantWarrior\Payment\Logger\MerchantWarriorLogger</argument>
        </arguments>
    </virtualType>

    <!-- Authorization command  -->
    <virtualType name="MerchantWarriorPaymentPayFrameAuthorizeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MerchantWarriorPaymentPayFrameAuthorizeRequest</argument>
            <argument name="transferFactory" xsi:type="object">MerchantWarrior\Payment\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MerchantWarrior\Payment\Gateway\Http\Client\TransactionPayment</argument>
            <argument name="validator" xsi:type="object">CheckoutResponseValidator</argument>
            <argument name="handler" xsi:type="object">MerchantWarriorPayFrameResponseHandlerComposite</argument>
        </arguments>
    </virtualType>
</config>